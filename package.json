{
  "name": "vscode-styra",
  "displayName": "Styra",
  "homepage": "https://www.styra.com",
  "icon": "styra-icon.png",
  "description": "VS Code support for Styra products",
  "repository": {
    "type": "git",
    "url": "https://github.com/StyraInc/vscode-styra.git"
  },
  "bugs": {
    "url": "https://github.com/StyraInc/vscode-styra/issues"
  },
  "publisher": "styra",
  "version": "2.0.1-next.5",
  "private": true,
  "main": "./out/main.js",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Snippets"
  ],
  "extensionDependencies": [
    "tsandall.opa"
  ],
  "activationEvents": [
    "workspaceContains:.styra/config",
    "onLanguage:rego"
  ],
  "contributes": {
    "commands": [
      {
        "command": "eopa.preview.default",
        "title": "Enterprise OPA: Preview"
      },
      {
        "command": "eopa.preview.package",
        "title": "Enterprise OPA: Preview Package"
      },
      {
        "command": "eopa.preview.selection",
        "title": "Enterprise OPA: Preview Selection"
      },
      {
        "command": "eopa.preview.setToken",
        "title": "Enterprise OPA: Set Token"
      },
      {
        "command": "styra.link.bundle-update",
        "title": "Styra Link: Bundle Update..."
      },
      {
        "command": "styra.link.config-git",
        "title": "Styra Link: Configure Git..."
      },
      {
        "command": "styra.link.init",
        "title": "Styra Link: Initialize..."
      },
      {
        "command": "styra.link.search",
        "title": "Styra Link: Search..."
      },
      {
        "command": "styra.link.test",
        "title": "Styra Link: Test"
      },
      {
        "command": "styra.link.validate-compliance",
        "title": "Styra Link: Validate Compliance"
      },
      {
        "command": "styra.link.validate-decisions",
        "title": "Styra Link: Validate Decisions"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == rego",
          "command": "eopa.preview.default",
          "group": "z_commands"
        },
        {
          "when": "resourceLangId == rego",
          "command": "eopa.preview.package",
          "group": "z_commands"
        },
        {
          "when": "resourceLangId == rego && editorHasSelection",
          "command": "eopa.preview.selection",
          "group": "z_commands"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Styra",
      "properties": {
        "styra.checkUpdateInterval": {
          "type": "number",
          "minimum": 0,
          "maximum": 30,
          "description": "How often to check for updates to the Styra CLI (in days)",
          "default": 1
        },
        "styra.diagnosticLimit": {
          "type": "number",
          "minimum": -1,
          "description": "Length limit of diagnostic output (use -1 for no limit)",
          "default": 120
        },
        "styra.diagnosticOutput": {
          "type": "boolean",
          "description": "Reveal API calls and other diagnostics in output pane",
          "default": false
        },
        "styra.outputFormat": {
          "type": "string",
          "enum": [
            "table",
            "json",
            "yaml"
          ],
          "description": "Choose the output format for your extension.",
          "default": "table"
        },
        "enterpriseOPA.url": {
          "type": "string",
          "default": "http://localhost:8181",
          "description": "The URL where the OPA API can be accessed",
          "order": 0
        },
        "enterpriseOPA.preview.defaultQuery": {
          "type": "string",
          "default": "",
          "description": "Define the default query to run for 'Enterprise OPA: Preview'",
          "order": 2
        },
        "enterpriseOPA.preview.prefix": {
          "type": "string",
          "default": "",
          "description": "Add a prefix to all paths when mapping files for the Preview API",
          "order": 3
        },
        "enterpriseOPA.preview.arguments": {
          "type": "array",
          "description": "Arguments which control the behavior of preview requests",
          "items": {
            "type": "string",
            "enum": [
              "instrument",
              "print",
              "provenance",
              "sandbox",
              "strict",
              "strict-builtin-errors"
            ],
            "enumDescriptions": [
              "Include extended metrics in preview returns for more in depth debugging",
              "Include output generated with print() in preview returns",
              "Include provenance data in preview returns",
              "Exclude existing policies and data when evaluating a preview request",
              "Compile previewed rego modules in strict mode",
              "Return an error in the event an error is generated from a built-in function instead of undefined"
            ]
          },
          "uniqueItems": true,
          "order": 4
        },
        "enterpriseOPA.preview.strategy": {
          "type": "string",
          "enum": [
            "all",
            "file"
          ],
          "enumDescriptions": [
            "Send all valid files in the Preview API request, except those excluded through the preview ignores",
            "Send only the currently edited file to the Preview API request"
          ],
          "default": "all",
          "description": "Choose what files get sent in Enterprise OPA preview requests",
          "order": 5
        },
        "enterpriseOPA.preview.ignore": {
          "type": "array",
          "description": "A list of glob style patterns to exclude when including files in previews",
          "items": {
            "type": "string"
          },
          "default": [
            "**/.git*"
          ],
          "uniqueItems": true,
          "order": 6
        },
        "enterpriseOPA.preview.codeLens": {
          "type": "boolean",
          "description": "Enable Code Lens links for executing package and file previews at the top of Rego documents",
          "default": true,
          "order": 7
        },
        "enterpriseOPA.auth.clientCertCA": {
          "type": "string",
          "default": "",
          "description": "The path to a custom certificate authority PEM certificate to use when validating TLS connections (accepts basic path variables such as ${workspaceFolder})",
          "order": 8
        },
        "enterpriseOPA.auth.allowUnauthorizedTLS": {
          "type": "boolean",
          "default": false,
          "description": "Allow TLS connections that do not come from the system defined certificate authorities, or the pinned certificate authority if defined.",
          "order": 9
        },
        "enterpriseOPA.auth.type": {
          "type": "string",
          "enum": [
            "none",
            "bearer",
            "tls"
          ],
          "enumDescriptions": [
            "No authentication when connecting to Enterprise OPA",
            "Send the stored bearer token when connecting to Enterprise OPA (set using the 'Enterprise OPA: Set Token' command)",
            "Provide the configured TLS client certificate when connecting to Enterprise OPA."
          ],
          "default": "none",
          "description": "The authentication method to use when connecting to an Enterprise OPA API",
          "order": 10
        },
        "enterpriseOPA.auth.clientCertPem": {
          "type": "string",
          "default": "",
          "description": "The path to the client certificate PEM file to use when performing TLS authentication (accepts basic path variables such as ${workspaceFolder})",
          "order": 11
        },
        "enterpriseOPA.auth.clientKeyPem": {
          "type": "string",
          "default": "",
          "description": "The path to the client certificate key file to use when performing TLS authentication (accepts basic path variables such as ${workspaceFolder})",
          "order": 12
        }
      }
    },
    "languages": [],
    "snippets": [
      {
        "language": "rego",
        "path": "./snippets/styra-common.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "package": "vsce package --pre-release",
    "package:install": "code --install-extension vscode-styra-${npm_package_version}.vsix",
    "check-licenses": "./packaging/validate-license.sh",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint --fix src --ext ts",
    "pretest-vscode": "npm run compile && npm run lint",
    "test-vscode": "node ./out/test/runTest.js",
    "test": "jest; npx ts-node src/scripts/update-coverage.ts",
    "test:ci": "jest --collectCoverage false",
    "test:verbose": "jest --verbose",
    "test:watch": "jest --watch",
    "watch": "tsc -watch -p ./",
    "snippets:build:common": "npx ts-node src/scripts/yaml2json.ts",
    "view-coverage": "open coverage/index.html"
  },
  "devDependencies": {
    "@babel/core": "^7.20.12",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-typescript": "^7.18.6",
    "@types/command-exists": "^1.2.0",
    "@types/fetch-mock": "^7.3.5",
    "@types/fs-extra": "^9.0.12",
    "@types/glob": "^7.1.3",
    "@types/jest": "^29.2.5",
    "@types/js-yaml": "^4.0.5",
    "@types/node": "14.x",
    "@types/node-fetch": "^2.6.4",
    "@types/picomatch": "^2.3.0",
    "@types/semver": "^7.3.13",
    "@types/shell-escape": "^0.2.1",
    "@types/vscode": "^1.71.0",
    "@typescript-eslint/eslint-plugin": "^5.59.5",
    "@typescript-eslint/parser": "^5.59.5",
    "@vscode/vsce": "^2.25.0",
    "babel-jest": "^29.3.1",
    "esbuild": "^0.17.6",
    "eslint": "^8.40.0",
    "eslint-plugin-sort-imports-es6-autofix": "^0.6.0",
    "fetch-mock": "^9.11.0",
    "fetch-mock-jest": "^1.5.1",
    "glob": "^7.1.7",
    "jest": "^29.3.1",
    "jest-mock-extended": "^3.0.5",
    "ts-jest": "^29.0.5",
    "ts-node": "^10.9.1",
    "typescript": "^4.3.2",
    "vscode-test": "^1.5.2"
  },
  "dependencies": {
    "command-exists": "^1.2.9",
    "fs-extra": "^10.0.0",
    "js-yaml": "^4.1.0",
    "move-file": "^2.1.0",
    "node-fetch": "^2.6.13",
    "picomatch": "^2.3.1",
    "semver": "^7.3.8",
    "shell-escape": "^0.2.0",
    "table": "^6.8.1"
  }
}
